/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3


/ {

    chosen {
        zmk,matrix_transform = &default_transform;
        //zmk,matrix_transform = &five_column_transform;
    };

  behaviors {
    escomma: spanish_comma {
      compatible = "zmk,behavior-mod-morph";
      label = "SPANISH_COMMA";
      #binding-cells = <0>;
      bindings = <&kp COMMA>, <&kp LS(COMMA)>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    esdot: spanish_dot {
      compatible = "zmk,behavior-mod-morph";
      label = "SPANISH_DOT";
      #binding-cells = <0>;
      bindings = <&kp DOT>, <&kp LS(DOT)>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    esntilde: spanish_ntilde {
      compatible = "zmk,behavior-mod-morph";
      label = "SPANISH_NTILDE";
      #binding-cells = <0>;
      bindings = <&kp SEMI>, <&kp COLON>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    // angle brackets: < GRAVE   > LS(GRAVE)
    // single quote:   ' MINUS   ? LS(MINUS)
    // double quote:   " EQUAL   ? LS(EQUAL)
  };

   // Activate ADJUST layer by pressing raise and lower
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2   |  3   |  4   |  5   |                   |  6   |  7    |   8    |  9   |   0   | Backspace |
// |  TAB  |  Q  |  W   |  E   |  R   |  T   |                   |  Y   |  U    |   I    |  O   |   P   |     '     |
// | SHIFT |  A  |  S   |  D   |  F   |  G   |                   |  H   |  J    |   K    |  L   |   Ñ   |     ´     |
// |   \   |  Z  |  X   |  C   |  V   |  B   |        |  |       |  N   |  M    |   ,    |  .   |   -   |   SHIFT   |
//               | LCTRL| ALT  | LGUI | LOWER|  SPACE |  | ENTER | RAISE| GUI   | ADJUST |  <   |
            bindings = <
&kp ESC   &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                             &kp N6    &kp N7     &kp N8     &kp N9     &kp N0     &kp BSPC
&kp TAB   &kp Q  &kp W    &kp E    &kp R     &kp T                              &kp Y     &kp U      &kp I      &kp O      &kp P      &kp MINUS
&kp LSHFT &kp A  &kp S    &kp D    &kp F     &kp G                              &kp H     &kp J      &kp K      &kp L      &kp SEMI   &kp SQT
&kp BSLH  &kp Z  &kp X    &kp C    &kp V     &kp B      &none        &none      &kp N     &kp M      &escomma   &esdot     &kp SLASH  &kp RSHFT  
                 &kp LCTRL &kp LALT &kp LGUI &mo LOWER  &kp SPACE    &kp RET    &mo RAISE &mo ADJUST &kp RALT   &kp GRAVE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            label = "lower";
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |       |  !  |  "  |  ·   |  $   |  %   |                   |  &   |  /    |   (   |   )  |   =   |  DEL  |
// |       |     |  @  |      |      |      |                   |      |       |       |      |   +   |   ?   |
// |       |     |     |      |      |      |                   |      |       |       |      |       |   [   |
// |   |   |     |     |      |      |      |        |  |       |      |       |   ;   |   :  |   _   |   {   |
//               |     |      |      |      |        |  |       |      |       |       |   >  |
            bindings = <
&trans     &trans    &trans     &trans     &trans   &trans                      &trans    &trans   &trans          &trans      &trans       &kp LC(DEL) 
&trans     &trans    &kp RA(N2) &trans     &trans   &trans                          &kp Y     &kp U    &kp I           &kp O       &kp RBKT     &kp LBKT
&trans     &trans    &trans     &trans     &trans   &trans                          &kp H     &kp J    &kp K           &kp L       &kp SEMI     &kp RA(LBKT)
&kp PIPE   &trans    &trans     &trans     &trans   &trans       &trans &trans      &trans    &trans   &kp LS(COMMA)   &kp LS(DOT) &kp LS(FSLH) &kp RA(SQT) 
                     &trans     &trans     &trans   &trans       &trans &trans      &trans    &trans   &trans          &kp LS(GRAVE)
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            label = "raise";
// ------------------------------------------------------------------------------------------------------------
// |   F1  |    F2     |    F3      |     F4     |     F5     |     F6     |                  |  F7  |   F8  |     F9    |    F10   |  F11  |  F12  |
// | BTCLR |    BT1    |     BT2    |    BT3     |    BT4     |    BT5     |                  |      |       |      ^    |          |       |   ¿   |
// |       |           |            |            |            |            |                  |      |   <-  |       v   |    ->    |       |   ]   |
// |       |           |            |            |            |            |       |  |       |      |       |           |          |       |   }   |
//                     |            |            |            |            |       |  |       |      |       |           |          |
            bindings = <
&kp F1     &kp F2       &kp F3       &kp F4       &kp F5       &kp F6                          &kp F7  &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                    &trans  &trans    &kp UP    &trans    &trans    &kp LS(SLASH)
&trans     &trans       &trans       &trans       &trans       &trans                          &trans  &kp LEFT  &kp DOWN  &kp RIGHT &trans    &kp RA(RBKT)
&trans     &trans       &trans       &trans       &trans       &trans          &trans  &trans  &trans  &trans    &trans    &trans    &trans    &kp RA(BSLH)
                        &trans       &trans       &trans       &trans          &trans &trans   &trans  &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
// ----------------------------------------------------------------------------------------------------------------------------
// |        |         |         |         |         |         |                  |      |      |       |      |       |       |
// | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
// |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
// |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
//                    |         |         |         |         |         | |      |      |      |       |      |
            label = "adjust";
            bindings = <
&none             &none           &none           &none           &none           &none                                   &none &none &none &none &none &none
&ext_power EP_TOG &rgb_ug RGB_HUD &rgb_ug RGB_HUI &rgb_ug RGB_SAD &rgb_ug RGB_SAI &rgb_ug RGB_EFF                         &none &none &none &none &none &none
&none             &rgb_ug RGB_BRD &rgb_ug RGB_BRI &none           &none           &none                                   &none &none &none &none &none &none
&none             &none           &none           &none           &none           &none            &rgb_ug RGB_TOG &none  &none &none &none &none &none &none
                                  &none           &none           &none           &none            &none           &none  &none &none &none &none
            >;
        };

    };
};
